                                                            ANGULAR

                                                     BANK APP IN ANGULAR
                                    
                                    FRONT END :- ANGULAR
                                    BACK END :-Nodejs(Express)
                                    DATABASE :-MongoDb

                                      Basic building blocks

1. Module:- To import 3rd party libraries
2. Component:- To create html css and ts files
-------------------------------------------------------------------------------------------------------------------------------------------------
    Basic Commands

1. create new project :- ng new projrct_name
2. create a component :- ng g c component_name
3. Run :- ng serve -o / ng serve --open
-------------------------------------------------------------------------------------------------------------------------------------------------

1. Data Binding
To share data inside the component
ts - Components and html - view
    1.1) One way data binding (ts->html or html ->ts file)
        a)Component to value
                a.1)String interpolation -{{expression}}  
                a.2)property binding -[attribute_name]="property"
        b)View component
                b.1)Event Binding -(event_name)="function name"
                b.2)Event Binding using $event - (event_name)= "function name($event)"
                b.3)Event Binding using templete referencing variable - #variable_name
    1.2)Two way Binding
    Data share in both directons(ts -> html and html -> ts)

    ngModel (library) - import from Formsmodule
    import ngModel from Formsmodule
2. Angular routing : to set path for a component
    {
        path:'',component : LoginComponent;
    },
    {
        path:'dashboard',component : DashboardComponent;
    },
    {
        path:'register',component : SignupComponent;
    }
3. Dependency injection : to share data b?w 2 Components

        Here we use constructor to achieve this concept

        Eg: Login to dashboard

4. Angular service  : to hold redundant data
        
        to create a service in angular - ng g s service_name



5. Angular directives 

    to manipulate DOM 
    
    1) component directives

    2) Structural directives
        (eg: table strucure)

    A) *ngFor

6. Angular Forms

    a) Templete drivern forms(designing of html pages)
    b) Model driven forms(ts file model ,design -> html page)

        - for advanced validation 
        - a) Reactive forms module      
            - group,array,controller 
            -import reactive forms modules 


7. local storage

    1) setItem
    2) getItem
    3) removeItem

8. parent child communication

    parent :- DashboardComponent
    child :- DeleteComponent